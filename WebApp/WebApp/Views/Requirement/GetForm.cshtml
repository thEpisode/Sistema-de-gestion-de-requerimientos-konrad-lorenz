
@{
    ViewBag.Title = "Modificar formulario";
    Layout = "~/Views/Shared/_AgentLayout.cshtml";
}

<h2>Modificar formulario</h2>

<section class="col-xs-6 col-md-offset-3" id="form-builder">
    <div class="col-md-12 portlets">
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="pull-left" id="form-title">Constructor: </div>
                <div class="widget-icons pull-right">
                    <a href="javascript: addField()" ><i style="width:18px;" class="fa fa-plus-circle"></i>Añadir campo</a>
                </div>
                <div class="clearfix"></div>
            </div>
            <div class="panel-body">
                <div class="padd">

                    <div class="form quick-post">
                        <table class="table table-hover" id="builder">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                <!--Rows-->
                            </tbody>
                        </table>
                    </div>


                </div>
                <div class="widget-foot">
                    <!-- Footer goes here -->
                </div>
            </div>
        </div>

    </div>

    
</section>

@section Scripts{
    <script>
        var templateName = "Default";
        var typeField = {
            string: '<input class="form-control" type="text" id="{0}" name="{1}">',
            text: '<textarea class="form-control" id="{0}" name="{1}"></textarea>'
        };
        var originalHTML = "";
        var Template = null;

        (function () {
            /// Settings
            // Get template
            getTemplateByName();
        })();

        function addField() {
            originalHtml = $("#builder>tbody").html();

            prepareForCreate();

            $("#builder>tbody").append(addFieldBuilder);
        };

        function prepareForCreate() {
            // Disable existing elements
            $('#builder>tbody').find('input').prop('disabled', true);
            $('#builder>tbody').find('textarea').prop('disabled', true);

            $('#builder>tbody').find('a').remove();
        }

        function addFieldBuilder() {
            var html = 
                '<tr id="creating-field">' +
                    '<td><input class="form-control" type="text" id="title-builder" placeholder="¿Qué nombre quieres que se vea?" minlength="2" required></td>' +
                    '<td><select class="form-control" id="type-builder"><option disabled selected>Seleccione un tipo de campo</option><option value="0">String</option><option value="1">Text</option></select></td>' +
                    '<td><a href="javascript: saveField()"><i class="fa fa-check"></i></a><a href="javascript: cancelField()"><i class="fa fa-times"></i></a></td>'
                '</tr>';
            return html;
        }

        function formBuilder(stringBuilder) {
            $("#form-title").text('Constructor: ' + templateName);

            if (stringBuilder.length > 0) {
                var items = stringBuilder.split(';');
                var html = "";
                $.each(items, function (key, value) {
                    var row = value.split('|');

                    html +=
                        '<tr id="field-' + key + '">' +
                            '<td>' + row[1] + '</td>' +
                            '<td>' + typeField[row[0]].replace('{0}', row[1]).replace('{1}', row[1]) + '</td>' +
                            '<td>' +
                                '<a href="javascript: editField(\'field-' + key + '\')">' +
                                    '<i class="fa fa-pencil"></i>'+
                                '</a>'+
                                '<a href="javascript: deleteField(\'field-' + key + '\')">'+
                                    '<i class="fa fa-times"></i>' +
                                '</a>'+
                            '</td>'
                        '</tr>';
                });
                $("#builder>tbody").append(html);
            }
        }

        function saveField() {
            var titleBuilder = $("#title-builder").val();
            var typeBuilder = $("#type-builder").val();

            if (titleBuilder.length > 0 && typeBuilder !== null) {
                if (Template.length>0) {
                    Template += ';' + (typeBuilder === 0 ? 'string' : 'text') + '|' + titleBuilder;
                }
                else {
                    Template += (typeBuilder === 0 ? 'string' : 'text') + '|' + titleBuilder;
                }
            }

            updateTemplate();
        }

        function updateField(key) {
            var titleBuilder = $("#title-builder").val();
            var typeBuilder = $("#type-builder").val();

            var items = Template.split(';');
            if (titleBuilder.length > 0 && typeBuilder !== null) {
                for (var i = 0; i < items.length; i++) {
                    if (i == key) {
                        items[i] = (typeBuilder == 0 ? 'string' : 'text') + '|' + titleBuilder;
                    }
                }
                Template = "";
                for (var i = 0; i < items.length; i++) {
                    if (i > 0) {
                        Template += ';' + items[i];
                    }
                    else {
                        Template += items[i];
                    }
                }
            }
            
            updateTemplate();
        }

        function updateTemplate() {
            $.ajax({
                url: "@Url.Action("EditTemplate", "Requirement")",
                type: "POST",
                data: "Name=" + templateName + "&Template=" + Template,
                success: function (data) {
                    console.log(data);                    
                    getTemplateByName();
                },
                error: function (data) {
                    console.log(data);
                    switch (data.status) {
                        case 403:
                        case 400:
                        case 404:
                            alert(JSON.parse(data.responseText).Message);
                            break;
                        default:
                            alert('Ocurrió un imprevisto, para más detalles revisa la consola de desarrolladores');
                            break;
                    }
                }
            });
        }

        function cancelField() {
            $("#builder>tbody").html(originalHtml);
        }

        function deleteField(key) {
            //debugger;
            var template = "";
            var items = Template.split(';');
            for (var i = 0; i < items.length; i++) {
                if (i != parseInt(key.split('field-')[1])) {
                    if (i == (items.length - 1)) {
                        template += items[i];
                    }
                    else {
                        template += items[i] + ";";
                    }
                }
            }
            Template = template;
            updateTemplate();
        }

        function editField(key) {
            originalHtml = $("#builder>tbody").html();

            var actualFields = $('#builder>tbody tr');
            
            // Disable another elements
            for (var i = 0; i < actualFields.length; i++) {
                if ($(actualFields[i]).attr("id") != key) {
                    $('#' + $(actualFields[i]).attr("id")).find('input').prop('disabled', true);
                    $('#' + $(actualFields[i]).attr("id")).find('textarea').prop('disabled', true);
                    $('#' + $(actualFields[i]).attr("id")).find('a').remove();
                }
            }            

            // Add create field
            $("#" + key).after(addFieldBuilder());

            // Set name for field
            $("#title-builder").val(Template.split(';')[key.split('field-')[1]].split('|')[1]);
            $("#type-builder").val((Template.split(';')[key.split('field-')[1]].split('|')[0] == 'string') ? 0 : 1);

            // Delete item
            $("#" + key).remove();

            // Change action
            var id = key.split('field-')[1]
            $("#creating-field>td:eq(2)>a:eq(0)").attr("href", 'javascript: updateField(\''+id+'\')');
            
        }


        function getTemplateByName() {
            $('#builder>tbody').find('tr').remove();
            $.ajax({
                url: "@Url.Action("GetTemplateByName", "Requirement")",
                type: "GET",
                data: "name=" + templateName,
                success: function (data) {
                    console.log(data);
                    Template = data.Template;
                    formBuilder(data.Template);
                },
                error: function (data) {
                    
                    console.log(data);
                    switch (data.status) {
                        case 403:
                        case 400:
                        case 404:
                            alert(JSON.parse(data.responseText).Message);
                            break;
                        default:
                            alert('Ocurrió un imprevisto, para más detalles revisa la consola de desarrolladores');
                            break;
                    }
                }
            });
        }

        $("#login-form").on("submit", function (event) {
            
            event.preventDefault();
        });
    </script>
}